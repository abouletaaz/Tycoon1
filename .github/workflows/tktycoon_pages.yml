name: TK Tycoon ‚Äî Pages + PWA anti-cache (v9)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build site
        shell: bash
        run: |
          set -euo pipefail
          python3 - <<'PY'
          import json, pathlib, textwrap
          V = "v9"   # <<< bump ici
          site = pathlib.Path("_site"); site.mkdir(parents=True, exist_ok=True)

          # ---- fichiers existants gard√©s s'ils sont d√©j√† dans le repo ----
          # On r√©utilise ton index/style/app si pr√©sents, sinon on les cr√©e minimes.
          def write_if_absent(p, content):
            p = pathlib.Path(p)
            if not p.exists():
              p.write_text(content, encoding="utf-8")

          # manifest + ic√¥nes
          (site/"manifest.webmanifest").write_text(json.dumps({
            "name":"TK Tycoon Freight Deluxe","short_name":"TK Tycoon",
            "start_url":"./","scope":"./","display":"standalone",
            "background_color":"#0f1115","theme_color":"#0f1115",
            "icons":[
              {"src":"icon-192.png","sizes":"192x192","type":"image/png"},
              {"src":"icon-512.png","sizes":"512x512","type":"image/png"}
            ]
          }, indent=2), encoding="utf-8")
          tiny = bytes.fromhex("89504E470D0A1A0A0000000D49484452000000010000000108060000001F15C4890000000A49444154789C6360000002000154010A9B0000000049454E44AE426082")
          for f in ("icon-192.png","icon-512.png","apple-touch-icon.png"):
            (site/f).write_bytes(tiny)

          # service worker anti-cache
          (site/"sw.js").write_text(textwrap.dedent(f"""
            const CACHE='tktycoon-{V}';
            const ASSETS=['./','./index.html','./style.css','./app.js?{V}','./manifest.webmanifest','./apple-touch-icon.png','./diag/index.html','./diag/diag.js','./diag/diag.css'];
            self.addEventListener('install',e=>{{
              self.skipWaiting();  // <-- prend la main imm√©diatement
              e.waitUntil(caches.open(CACHE).then(c=>c.addAll(ASSETS)));
            }});
            self.addEventListener('activate',e=>{{
              e.waitUntil(
                caches.keys().then(keys=>Promise.all(keys.filter(k=>k!==CACHE).map(k=>caches.delete(k)))).then(()=>self.clients.claim())
              );
            }});
            self.addEventListener('fetch',e=>{{
              // cache-first avec mise √† jour en arri√®re-plan
              e.respondWith(
                caches.match(e.request,{{ignoreSearch:true}}).then(r=>r||fetch(e.request).then(res=>{{
                  const cp=res.clone(); caches.open(CACHE).then(c=>c.put(e.request,cp)); return res;
                }}).catch(()=>r))
              );
            }});
          """), encoding="utf-8")

          # index minimal si absent (ajoute juste l‚Äôappel versionn√© √† app.js)
          write_if_absent(site/"index.html", f"""<!doctype html><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover"><title>TK Tycoon</title><link rel="manifest" href="./manifest.webmanifest"><link rel="apple-touch-icon" href="./apple-touch-icon.png"><link rel="stylesheet" href="./style.css"><div class=appbar><span class=pill>üöö TK Tycoon</span><a class=pill href="./diag/">Diagnostic</a><button id=btnUpdate class=pill>Mettre √† jour</button></div><div id=app></div><script src="./app.js?{V}"></script><script>if('serviceWorker'in navigator)navigator.serviceWorker.register('./sw.js');const u=document.getElementById('btnUpdate');u.onclick=async()=>{{if('caches'in window){{for(const k of await caches.keys()){{await caches.delete(k)}}}}if('serviceWorker'in navigator){{for(const r of await navigator.serviceWorker.getRegistrations()){{await r.unregister()}}}}location.reload(true)}}</script>""")

          # style minimal si absent
          write_if_absent(site/"style.css", ":root{--bg:#0f1115;--line:#2a2f3a;--txt:#e6e6e6}.appbar{position:sticky;top:0;background:#0b0e13;color:var(--txt);border-bottom:1px solid var(--line);padding:8px;display:flex;gap:8px}.pill{border:1px solid var(--line);background:#10151f;color:var(--txt);border-radius:999px;padding:6px 10px;font-weight:600}body{margin:0;background:#0f1115;color:var(--txt);font:14px system-ui}")

          # --- DIAG avec bouton Purger ---
          diag = site/"diag"; diag.mkdir(parents=True, exist_ok=True)
          (diag/"index.html").write_text("""<!doctype html><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>Diagnostic PWA</title><link rel="stylesheet" href="./diag.css"><div class="card"><h2>Diagnostic PWA</h2><div id="out">Tests‚Ä¶</div><p><button id="purge" class="btn">üßπ Purger cache + SW</button> <a class="btn" href="../">‚Üê Retour au jeu</a></p></div><script src="./diag.js"></script>""", encoding="utf-8")
          (diag/"diag.css").write_text("body{margin:0;background:#0f1115;color:#e6e6e6;font:14px system-ui;display:grid;place-items:center;min-height:100vh}.card{background:#141820;border:1px solid #2a2f3a;border-radius:12px;padding:16px;max-width:680px;width:94%}.ok{color:#75c46b}.bad{color:#ef5350}.warn{color:#ffb454}.btn{display:inline-block;padding:8px 10px;border:1px solid #2a2f3a;border-radius:8px;color:#e6e6e6;background:#10151f;text-decoration:none}ul{line-height:1.6}", encoding="utf-8")
          (diag/"diag.js").write_text(f"(async function(){{function li(t,c){{var el=document.createElement('li');el.textContent=t;if(c)el.className=c;list.appendChild(el)}}var out=document.getElementById('out');var ul=document.createElement('ul');out.innerHTML='';out.appendChild(ul);var list=ul;li('HTTPS: '+(location.protocol==='https:'?'OK':'KO'), location.protocol==='https:'?'ok':'bad');try{{const r=await fetch('../manifest.webmanifest',{{cache:'no-store'}}); li('Manifest: '+(r.ok?'OK':'KO '+r.status), r.ok?'ok':'bad');}}catch(e){{li('Manifest: KO '+e,'bad');}}if('serviceWorker' in navigator){{try{{const reg=await navigator.serviceWorker.getRegistration('../'); li('Service worker: '+(reg?'OK':'KO'), reg?'ok':'bad');}}catch(e){{li('SW: KO '+e,'bad');}}}} else {{li('SW non support√©','warn');}}if('caches' in window){{const keys=await caches.keys(); li('Caches: '+(keys.length?keys.join(', '):'aucun'), keys.length?'ok':'warn');}}var standalone=window.navigator.standalone===true||(window.matchMedia&&window.matchMedia('(display-mode: standalone)').matches); li('Mode: '+(standalone?'App (standalone)':'Web (Safari/Chrome)'), standalone?'ok':'warn');document.getElementById('purge').onclick=async()=>{{try{{if('caches' in window){{for(const k of await caches.keys()) await caches.delete(k);}}if('serviceWorker' in navigator){{const regs=await navigator.serviceWorker.getRegistrations();for(const r of regs) await r.unregister();}}alert('Cache et SW purg√©s. Rechargement‚Ä¶'); location.replace('../?fresh={V}');}}catch(e){{alert('√âchec purge: '+e);}}}})();", encoding="utf-8")
          PY

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/deploy-pages@v4
