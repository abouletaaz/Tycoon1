name: TK Tycoon ‚Äî PWA + Auto-Diag + Smoke Tests

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # ------------------ BUILD (site + jeu + diag) ------------------
      - name: Generate site (PWA + game + diagnostics)
        run: |
          python3 - <<'PY'
          import json, pathlib, textwrap
          site = pathlib.Path("_site"); site.mkdir(parents=True, exist_ok=True)

          # Manifest
          (site/"manifest.webmanifest").write_text(json.dumps({
            "name":"TK Tycoon Freight Deluxe",
            "short_name":"TK Tycoon",
            "start_url":"./",
            "scope":"./",
            "display":"standalone",
            "background_color":"#0f1115",
            "theme_color":"#0f1115",
            "icons":[
              {"src":"icon-192.png","sizes":"192x192","type":"image/png"},
              {"src":"icon-512.png","sizes":"512x512","type":"image/png"}
            ]
          }, indent=2), encoding="utf-8")

          # Icons (placeholders)
          tiny = bytes.fromhex("89504E470D0A1A0A0000000D49484452000000010000000108060000001F15C4890000000A49444154789C6360000002000154010A9B0000000049454E44AE426082")
          (site/"icon-192.png").write_bytes(tiny)
          (site/"icon-512.png").write_bytes(tiny)
          (site/"apple-touch-icon.png").write_bytes(tiny)

          # Service Worker
          (site/"sw.js").write_text(textwrap.dedent("""\
            var CACHE='tktycoon-v6';
            var ASSETS=['./','./index.html','./style.css','./app.js','./manifest.webmanifest','./apple-touch-icon.png','./diag/index.html','./diag/diag.js','./diag/diag.css'];
            self.addEventListener('install',function(e){
              e.waitUntil(caches.open(CACHE).then(function(c){return c.addAll(ASSETS)}));
            });
            self.addEventListener('activate',function(e){
              e.waitUntil(caches.keys().then(function(keys){
                return Promise.all(keys.filter(function(k){return k!==CACHE}).map(function(k){return caches.delete(k)}));
              }).then(function(){return self.clients.claim()}));
            });
            self.addEventListener('fetch',function(e){
              e.respondWith(
                caches.match(e.request,{ignoreSearch:true}).then(function(r){
                  return r || fetch(e.request).then(function(res){
                    var cp=res.clone(); caches.open(CACHE).then(function(c){c.put(e.request,cp)}); return res;
                  }).catch(function(){ return r; });
                })
              );
            });
          """), encoding="utf-8")

          # Styles
          (site/"style.css").write_text(textwrap.dedent("""\
            :root{--bg:#0f1115;--panel:#141820;--line:#2a2f3a;--txt:#e6e6e6;--acc:#75c46b}
            *{box-sizing:border-box}html,body{height:100%}body{margin:0;background:var(--bg);color:var(--txt);font:14px/1.4 system-ui,Segoe UI,Roboto}
            .topbar{display:flex;justify-content:space-between;align-items:center;padding:10px 14px;border-bottom:1px solid var(--line);background:#0b0e13}
            .brand{font-weight:800}
            .wrap{max-width:1500px;margin:12px auto;display:grid;grid-template-columns:360px 1fr;gap:12px;padding:0 12px}
            .tabs{display:grid;grid-template-columns:repeat(4,1fr);gap:6px}
            .tabs button{padding:.6rem;border-radius:10px;border:1px solid var(--line);background:#10151f;color:#e6e6e6;cursor:pointer;font-weight:600}
            .tabs button.active{background:var(--panel);outline:2px solid var(--acc);border-color:transparent}
            .tab{background:#141820;border:1px solid var(--line);border-radius:12px;padding:12px}
            .hidden{display:none}
            .row{display:grid;grid-template-columns:1fr;gap:6px;margin:.35rem 0}
            select,button{padding:.55rem;border-radius:10px;border:1px solid var(--line);background:#10151f;color:#e6e6e6}
            #view{width:100%;border:1px solid var(--line);border-radius:12px;background:#0b0f16}
            .mini{position:absolute;right:18px;bottom:18px;border:1px solid var(--line);border-radius:8px;background:#0b0f16;opacity:.9}
            @media (max-width:1024px){.wrap{grid-template-columns:1fr}}
            .appbar{position:sticky;top:0;z-index:20;display:flex;gap:8px;align-items:center;justify-content:space-between;background:#0b0e13;padding:8px 12px;border-bottom:1px solid var(--line)}
            .pill{border:1px solid var(--line);background:#10151f;color:#e6e6e6;border-radius:999px;padding:6px 10px;font-weight:600}
            .pill.primary{outline:2px solid var(--acc);border-color:transparent}
          """), encoding="utf-8")

          # Index (iOS full-screen + install/update UI)
          (site/"index.html").write_text(textwrap.dedent("""\
            <!doctype html><html lang="fr"><head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover">
              <title>TK Tycoon Freight Deluxe</title>
              <meta name="theme-color" content="#0f1115">
              <link rel="manifest" href="./manifest.webmanifest">
              <meta name="apple-mobile-web-app-capable" content="yes">
              <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
              <meta name="apple-mobile-web-app-title" content="TK Tycoon">
              <link rel="apple-touch-icon" href="./apple-touch-icon.png">
              <link rel="stylesheet" href="./style.css">
            </head><body>
              <div class="appbar">
                <div>
                  <span class="pill">üöö TK Tycoon</span>
                  <span id="mode" class="pill">Mode: web</span>
                  <a class="pill" href="./diag/" target="_self">Diagnostic</a>
                </div>
                <div>
                  <button id="btnInstall" class="pill primary" hidden>Installer</button>
                  <button id="btnUpdate" class="pill" hidden>Mettre √† jour</button>
                </div>
              </div>

              <div class="topbar">
                <div class="brand">üöö TK Tycoon Freight Deluxe</div>
                <div class="stats">
                  ‚è± <span id="day">Day 1</span> ‚Ä¢ üí∞ <span id="money">0</span> ‚Ä¢ ‚õΩ <span id="fuel">0</span> ‚Ä¢ üõ£ <span id="maint">0</span>
                </div>
              </div>

              <div class="wrap">
                <div class="left">
                  <div class="tabs">
                    <button data-tab="build" class="active">Construire</button>
                    <button data-tab="fleet">Flotte</button>
                    <button data-tab="contracts">Contrats</button>
                    <button data-tab="economy">√âconomie</button>
                  </div>
                  <div class="tab" id="tab-build">
                    <h3>R√©seau routier</h3>
                    <div class="row"><label>Ville A</label><select id="cityA"></select></div>
                    <div class="row"><label>Ville B</label><select id="cityB"></select></div>
                    <div class="row"><label>Niveau route</label>
                      <select id="roadLvl">
                        <option value="1">Niv.1 ‚Äî 1 000$ (lent)</option>
                        <option value="2">Niv.2 ‚Äî 2 500$ (moyen)</option>
                        <option value="3">Niv.3 ‚Äî 6 000$ (rapide)</option>
                      </select>
                    </div>
                    <button id="buildRoad">Construire / Am√©liorer</button>
                    <p class="hint">Astuce : am√©liore un axe principal, la vitesse impacte les revenus.</p>
                  </div>
                  <div class="tab hidden" id="tab-fleet">
                    <h3>Nouvel achat</h3>
                    <div class="row"><label>Type</label>
                      <select id="truckType">
                        <option value="van">Fourgon ‚Äî 6u ‚Äî 60km/h ‚Äî 2L/100</option>
                        <option value="rigid">Porteur ‚Äî 16u ‚Äî 75km/h ‚Äî 6L/100</option>
                        <option value="semi">Semi ‚Äî 32u ‚Äî 85km/h ‚Äî 12L/100</option>
                        <option value="tanker">Citerne ‚Äî 28u ‚Äî 80km/h ‚Äî 10L/100</option>
                      </select>
                    </div>
                    <div class="row"><label>Origine</label><select id="from"></select></div>
                    <div class="row"><label>Destination</label><select id="to"></select></div>
                    <div class="row"><label>Cargo</label>
                      <select id="cargoType">
                        <option value="wood">bois</option>
                        <option value="grain">grain</option>
                        <option value="steel">acier</option>
                        <option value="goods">biens</option>
                        <option value="fuel">carburant</option>
                      </select>
                    </div>
                    <button id="buyTruck">Acheter & assigner</button>
                    <div id="fleetList" class="list"></div>
                  </div>
                  <div class="tab hidden" id="tab-contracts">
                    <h3>Contrats de fret</h3>
                    <div id="contracts" class="list"></div>
                  </div>
                  <div class="tab hidden" id="tab-economy">
                    <h3>√âconomie</h3>
                    <div id="eco" class="list"></div>
                  </div>
                </div>
                <div class="right">
                  <canvas id="view" width="1300" height="740" aria-label="map"></canvas>
                  <canvas id="mini" width="220" height="140" class="mini"></canvas>
                </div>
              </div>

              <script src="./app.js"></script>
              <script>
                (function(){
                  var btnInstall=document.getElementById('btnInstall');
                  var btnUpdate=document.getElementById('btnUpdate');
                  var mode=document.getElementById('mode');
                  var isStandalone = window.navigator.standalone === true ||
                    (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);
                  mode.textContent = 'Mode: ' + (isStandalone ? 'app' : 'web');

                  if(!isStandalone){
                    // Android install banner
                    var deferred;
                    window.addEventListener('beforeinstallprompt',function(e){
                      e.preventDefault(); deferred=e; btnInstall.hidden=false;
                      btnInstall.onclick=function(){ if(deferred){ deferred.prompt(); deferred=null; btnInstall.hidden=true; } }
                    });
                  }
                  if('serviceWorker' in navigator){
                    navigator.serviceWorker.register('./sw.js').then(function(reg){
                      if(reg.waiting){ btnUpdate.hidden=false; }
                      reg.addEventListener('updatefound',function(){
                        var nw=reg.installing;
                        if(!nw) return;
                        nw.addEventListener('statechange',function(){
                          if(nw.state==='installed' && navigator.serviceWorker.controller){
                            btnUpdate.hidden=false;
                          }
                        });
                      });
                    });
                    btnUpdate.onclick=function(){
                      caches.keys().then(function(keys){ return Promise.all(keys.map(function(k){return caches.delete(k)})); })
                        .then(function(){ location.reload(); });
                    };
                  }
                })();
              </script>
            </body></html>
          """), encoding="utf-8")

          # Gameplay (ES5 compatible iOS)
          (site/"app.js").write_text(textwrap.dedent(r"""\
            // Basic error hook -> console (captured by CI) and localStorage
            (function(){
              var bucket = [];
              function flush(){ try{ localStorage.setItem('tktycoon_errors', JSON.stringify(bucket).slice(-5000)); }catch(e){} }
              window.addEventListener('error', function(e){ bucket.push({type:'error', msg:String(e.message||e), src:e.filename, line:e.lineno, col:e.colno}); console.error('[TK] window.error', e.message||e); flush(); });
              window.addEventListener('unhandledrejection', function(e){ bucket.push({type:'promise', msg:String(e.reason)}); console.error('[TK] unhandledrejection', e.reason); flush(); });
            })();

            function hashCode(s){var t=0;for(var i=0;i<s.length;i++){t=((t<<5)-t)+s.charCodeAt(i)|0}return t>>>0;}
            function rngFactory(a){return function(){a+=0x6D2B79F5;var t=Math.imul(a^a>>>15,a|1);t^=t+Math.imul(t^t>>>7,t|61);return ((t^t>>>14)>>>0)/4294967296}}
            var RNG = rngFactory(hashCode(location.pathname));
            function $(id){return document.getElementById(id)}
            var CITIES=[{id:'A',name:'Port-Est',x:120,y:520},{id:'B',name:'Valbois',x:360,y:220},{id:'C',name:'Fer-sur-Lac',x:760,y:180},{id:'D',name:'Grainville',x:1040,y:520},{id:'E',name:'Cap-Sud',x:560,y:560},{id:'F',name:'Nordacier',x:1020,y:120}];
            var CARGO=['wood','grain','steel','goods','fuel'];
            var TRUCKS={van:{cap:6,spd:60,f:2,c:4000,m:20,l:'Fourgon'},rigid:{cap:16,spd:75,f:6,c:9000,m:45,l:'Porteur'},semi:{cap:32,spd:85,f:12,c:18000,m:80,l:'Semi'},tanker:{cap:28,spd:80,f:10,c:22000,m:95,l:'Citerne'}};
            var PRICE={wood:40,grain:35,steel:80,goods:100,fuel:70};
            var IND={A:{wood:.20,steel:.05,fuel:.10},B:{wood:.45,grain:.12},C:{steel:.35,goods:.02,fuel:.02},D:{grain:.55,goods:.05,fuel:.03},E:{wood:.12,grain:.12,steel:.08,goods:.04,fuel:.02},F:{steel:.45,fuel:.02},cons:{A:{goods:-.30},B:{steel:-.25},C:{goods:-.2},D:{wood:-.25},E:{grain:-.2},F:{goods:-.1}}};
            function newContracts(){var arr=[],ids=['A','B','C','D','E','F'];for(var i=0;i<6;i++){var cg=CARGO[(Math.random()+RNG())*CARGO.length|0];var to=ids[(Math.random()+RNG())*ids.length|0];arr.push({id:i+1,cargo:cg,to:to,reward:Math.round(180+RNG()*260),demand:Math.round(12+RNG()*26)});}return arr;}
            var S={t:0,dt:.25,day:1,$:25000,fuel:0,maint:0,roads:new Map(),stocks:{},fleet:[],contracts:newContracts()};
            for(var i=0;i<CITIES.length;i++){S.stocks[CITIES[i].id]={}; for(var k=0;k<CARGO.length;k++){S.stocks[CITIES[i].id][CARGO[k]]=0;}}
            var seq=1;
            var view=$('view'),ctx=view.getContext('2d'),mini=$('mini'),mctx=mini.getContext('2d');
            var money=$('money'),day=$('day'),fuelEl=$('fuel'),maintEl=$('maint');
            var cityA=$('cityA'),cityB=$('cityB'),from=$('from'),to=$('to');
            function fillSelect(sel){for(var i=0;i<CITIES.length;i++){var c=CITIES[i],o=document.createElement('option');o.value=c.id;o.textContent=c.name;sel.appendChild(o);}}
            fillSelect(cityA);fillSelect(cityB);fillSelect(from);fillSelect(to);
            document.querySelectorAll('.tabs button').forEach(function(b){b.onclick=function(){document.querySelectorAll('.tabs button').forEach(function(x){x.classList.remove('active')});b.classList.add('active');document.querySelectorAll('.tab').forEach(function(t){t.classList.add('hidden')});document.getElementById('tab-'+b.dataset.tab).classList.remove('hidden');};});

            function key(a,b){return a<b?a+'-'+b:b+'-'+a} function C(id){for(var i=0;i<CITIES.length;i++)if(CITIES[i].id===id)return CITIES[i]}
            function dist(a,b){var A=C(a),B=C(b);return Math.hypot(A.x-B.x,A.y-B.y)}
            function roadLvl(a,b){var v=S.roads.get(key(a,b));return v?v.lvl:0}
            function speed(a,b){var lvl=roadLvl(a,b);return [0,1,1.35,1.75][lvl]||.5}
            function neighbors(id){var n=[],it=S.roads.entries();for(var e of it){var k=e[0],xy=k.split('-');if(xy[0]===id)n.push(xy[1]);else if(xy[1]===id)n.push(xy[0]);}return n;}
            function upgrade(a,b,lvl){if(a===b)return false;var k=key(a,b),v=S.roads.get(k),cur=v?v.lvl:0;if(lvl<=cur)return true;var steps=[0,1000,2500,6000],cost=steps[lvl]-steps[cur];if(S.$<cost)return false;S.$-=cost;S.roads.set(k,{lvl:lvl});return true;}
            function astar(a,b){if(a===b)return[a];var o=[a],came={},g={},f={};for(var i=0;i<CITIES.length;i++){var id=CITIES[i].id;g[id]=1e9;f[id]=1e9}g[a]=0;f[a]=dist(a,b)/80;while(o.length){o.sort(function(i,j){return f[i]-f[j]});var u=o.shift();if(u===b)break;var nb=neighbors(u);for(var j=0;j<nb.length;j++){var v=nb[j];var gg=g[u]+dist(u,v)/speed(u,v);if(gg<g[v]){came[v]=u;g[v]=gg;f[v]=gg+dist(v,b)/80;if(o.indexOf(v)<0)o.push(v);}}}if(!came[b])return null;var p=[b];while(came[p[0]])p.unshift(came[p[0]]);return p;}
            function pathLen(p){if(!p)return 0;var s=0;for(var i=0;i<p.length-1;i++)s+=dist(p[i],p[i+1]);return s;}
            function avgSpeed(r){if(!r||r.length<2)return 1;var s=0,c=0;for(var i=0;i<r.length-1;i++){s+=speed(r[i],r[i+1]);c++;}return c?s/c:1;}
            $('buildRoad').onclick=function(){var lvl=parseInt($('roadLvl').value,10);if(!upgrade(cityA.value,cityB.value,lvl))alert("Impossible (fonds ou s√©lection).");};
            $('buyTruck').onclick=function(){var type=$('truckType').value,cargo=$('cargoType').value;var p=astar(from.value,to.value);if(!p)return alert("Pas de route");var d=TRUCKS[type];if(S.$<d.c)return alert("Fonds insuffisants");S.$-=d.c;S.fleet.push({id:seq++,type:type,cargo:cargo,from:from.value,to:to.value,route:p,dist:pathLen(p),at:0,dir:1,load:0,spd:d.spd/100,f:d.f,m:d.m});renderFleet();};
            function econDay(){for(var k in PRICE){PRICE[k]=Math.max(10,PRICE[k]+Math.round((Math.random()+RNG()-.5)*6));}var roadM=0;for(var e of S.roads.values()){roadM+=e.lvl*10}var fleetM=0;for(var i=0;i<S.fleet.length;i++){fleetM+=S.fleet[i].m}S.maint=roadM+fleetM;S.$-=S.maint;var inc=Math.min(S.fuel,20)*PRICE.fuel;S.$+=inc;S.fuel=Math.max(0,S.fuel-20);}
            function tick(){S.t+=S.dt;var d=Math.floor(S.t/40)+1;if(d!==S.day){S.day=d;econDay();S.contracts=newContracts();}
              for(var ci=0;ci<CITIES.length;ci++){var id=CITIES[ci].id;for(var k=0;k<CARGO.length;k++){var cg=CARGO[k];var prod=(IND[id]&&IND[id][cg])?IND[id][cg]:0;var cons=(IND.cons[id]&&IND.cons[id][cg])?IND.cons[id][cg]:0;S.stocks[id][cg]+=(prod>0?prod:0)*S.dt;S.stocks[id][cg]+=(cons<0?cons:0)*S.dt;if(S.stocks[id][cg]<0)S.stocks[id][cg]=0;}}
              for(var ti=0;ti<S.fleet.length;ti++){var t=S.fleet[ti];if(!t.route||t.dist<=0)continue;t.at+=80*t.spd*avgSpeed(t.route)*S.dt;if(t.at>=t.dist){var dst=t.dir>0?t.route[t.route.length-1]:t.route[0];if(t.load>0&&dst===t.to){var ct=null;for(var i=0;i<S.contracts.length;i++){var c=S.contracts[i];if(c.cargo===t.cargo&&c.to===dst&&c.demand>0){ct=c;break}}var q=t.load;if(ct){var u=Math.min(ct.demand,q);S.$+=u*(ct.reward+(PRICE[t.cargo]||0));ct.demand-=u;q-=u;}else{S.$+=q*(PRICE[t.cargo]||0);q=0;}if(t.cargo==='fuel')S.fuel+=t.load;S.stocks[dst][t.cargo]+=(q>0?q:0);t.load=0;}if(t.dir<0){var avail=S.stocks[t.from][t.cargo]||0,take=Math.min(avail,t.cap||TRUCKS[t.type].cap);S.stocks[t.from][t.cargo]-=take;t.load=take;S.$-=(t.dist/20)*t.f;}t.dir*=-1;t.at=0;}}}
            function draw(){ctx.fillStyle="#0b0f16";ctx.fillRect(0,0,view.width,view.height);
              for(var e of S.roads.entries()){var k=e[0],v=e[1],xy=k.split('-'),A=C(xy[0]),B=C(xy[1]);ctx.lineWidth=2+v.lvl*1.5;ctx.strokeStyle=['#2b3b55','#4e86ff','#75c46b','#ffd166'][v.lvl];ctx.beginPath();ctx.moveTo(A.x,A.y);ctx.lineTo(B.x,B.y);ctx.stroke();}
              for(var i=0;i<CITIES.length;i++){var c=CITIES[i];ctx.fillStyle="#1f2937";ctx.beginPath();ctx.arc(c.x,c.y,18,0,Math.PI*2);ctx.fill();ctx.strokeStyle="#4b5563";ctx.stroke();ctx.fillStyle="#e5e7eb";ctx.font="12px system-ui";ctx.fillText(c.name,c.x-24,c.y-24);}
              for(var ti=0;ti<S.fleet.length;ti++){var t=S.fleet[ti];if(!t.route||t.route.length<2)continue;var d=t.at,x=null,y=null;for(var i2=0;i2<t.route.length-1;i2++){var A=C(t.route[i2]),B=C(t.route[i2+1]),L=Math.hypot(A.x-B.x,A.y-B.y);if(d<=L||i2===t.route.length-2){var kf=d/L,P=t.dir>0?{a:A,b:B}:{a:B,b:A};x=P.a.x+(P.b.x-P.a.x)*Math.min(1,Math.max(0,kf));y=P.a.y+(P.b.y-P.a.y)*Math.min(1,Math.max(0,kf));break;}else d-=L;}ctx.fillStyle=t.cargo==='wood'?'#8b5a2b':t.cargo==='grain'?'#e3b341':t.cargo==='steel'?'#6b7280':t.cargo==='goods'?'#60a5fa':'#c084fc';ctx.fillRect(x-6,y-4,12,8);}
              // Ensure at least one pixel drawn (used by CI)
              try{ window.__frameSample = (ctx.getImageData(10,10,1,1).data||[])[3] || 0; }catch(e){}
              mctx.fillStyle="#0b0f16";mctx.fillRect(0,0,mini.width,mini.height);var sx=mini.width/view.width,sy=mini.height/view.height;for(var e2 of S.roads.entries()){var k2=e2[0],v2=e2[1],xy2=k2.split('-'),A2=C(xy2[0]),B2=C(xy2[1]);mctx.strokeStyle=['#2b3b55','#4e86ff','#75c46b','#ffd166'][v2.lvl];mctx.beginPath();mctx.moveTo(A2.x*sx,A2.y*sy);mctx.lineTo(B2.x*sx,B2.y*sy);mctx.stroke();}for(var i3=0;i3<CITIES.length;i3++){var cc=CITIES[i3];mctx.fillStyle="#9aa4b2";mctx.fillRect(cc.x*sx-2,cc.y*sy-2,4,4);}
              money.textContent=Math.round(S.$).toLocaleString()+" $";fuelEl.textContent=Math.floor(S.fuel)+"u";maintEl.textContent="-"+Math.round(S.maint)+" $/jour";day.textContent="Day "+S.day;}
            function renderFleet(){var box=document.getElementById('fleetList');box.innerHTML='';for(var i=0;i<S.fleet.length;i++){var t=S.fleet[i],def=TRUCKS[t.type],it=document.createElement('div');it.className='item';it.innerHTML='#'+t.id+' '+def.l+' ‚Ä¢ '+t.cargo+' ‚Ä¢ '+C(t.from).name+' ‚áÜ '+C(t.to).name+'<span class="badge">cap '+(t.cap||def.cap)+'</span><span class="badge">v'+def.spd+'km/h</span><span class="badge">fuel '+t.f+'/100km</span>';box.appendChild(it);}}
            function renderContracts(){var box=document.getElementById('contracts');box.innerHTML='';for(var i=0;i<S.contracts.length;i++){var c=S.contracts[i],it=document.createElement('div');it.className='item';it.innerHTML='<b>'+c.cargo+'</b> ‚Üí '+C(c.to).name+'<span class="badge">'+c.reward+'$/u</span><span class="badge">reste '+c.demand+'</span>';box.appendChild(it);}}
            function renderEconomy(){var box=document.getElementById('eco');box.innerHTML='';for(var k in PRICE){var it=document.createElement('div');it.className='item';it.innerHTML=k+' <span class="badge">'+PRICE[k]+'$/u</span>';box.appendChild(it);}}
            setInterval(function(){renderFleet();renderContracts();renderEconomy();},1000);
            upgrade('A','E',2);upgrade('E','B',1);upgrade('E','C',1);upgrade('E','D',1);upgrade('C','F',1);
            (function loop(){tick();draw();requestAnimationFrame(loop);})();
          """), encoding="utf-8")

          # Diagnostics page (/diag)
          diag = site/"diag"; diag.mkdir(exist_ok=True, parents=True)
          (diag/"index.html").write_text(textwrap.dedent("""\
            <!doctype html><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1">
            <title>Diagnostic PWA</title><link rel="stylesheet" href="./diag.css">
            <div class="card"><h2>Diagnostic PWA</h2>
              <div id="out">Tests en cours‚Ä¶</div>
              <p><a href="../" class="btn">‚Üê Retour au jeu</a></p>
            </div>
            <script src="./diag.js"></script>
          """), encoding="utf-8")
          (diag/"diag.css").write_text(textwrap.dedent("""\
            body{margin:0;background:#0f1115;color:#e6e6e6;font:14px system-ui;display:grid;place-items:center;min-height:100vh}
            .card{background:#141820;border:1px solid #2a2f3a;border-radius:12px;padding:16px;max-width:680px;width:94%}
            .ok{color:#75c46b}.bad{color:#ef5350}.warn{color:#ffb454}
            .btn{display:inline-block;padding:8px 10px;border:1px solid #2a2f3a;border-radius:8px;color:#e6e6e6;text-decoration:none}
            ul{line-height:1.6}
          """), encoding="utf-8")
          (diag/"diag.js").write_text(textwrap.dedent("""\
            (async function(){
              function li(text, cls){ var el=document.createElement('li'); el.textContent=text; if(cls) el.className=cls; list.appendChild(el); }
              var out=document.getElementById('out'); var ul=document.createElement('ul'); out.innerHTML=''; out.appendChild(ul); var list=ul;
              li('HTTPS: '+(location.protocol==='https:'?'OK':'KO'), location.protocol==='https:'?'ok':'bad');
              try{const r=await fetch('../manifest.webmanifest',{cache:'no-store'}); li('Manifest: '+(r.ok?'OK':'KO '+r.status), r.ok?'ok':'bad');}catch(e){li('Manifest: KO '+e,'bad');}
              if('serviceWorker' in navigator){try{const reg=await navigator.serviceWorker.getRegistration('../'); li('Service worker: '+(reg?'OK':'KO'), reg?'ok':'bad');}catch(e){li('SW: KO '+e,'bad');}} else {li('SW non support√©','warn');}
              if('caches' in window){const keys=await caches.keys(); li('Caches: '+(keys.length?keys.join(', '):'aucun'), keys.length?'ok':'warn');}
              var standalone = window.navigator.standalone===true||(window.matchMedia&&window.matchMedia('(display-mode: standalone)').matches);
              li('Mode: '+(standalone?'App (standalone)':'Web (Safari/Chrome)'), standalone?'ok':'warn');
              for(const f of ['../index.html','../style.css','../app.js','../sw.js']){try{const r=await fetch(f,{cache:'no-store'}); li('Fichier '+f+': '+(r.ok?'OK':'KO '+r.status), r.ok?'ok':'bad');}catch(e){li('Fichier '+f+': KO '+e,'bad');}}
            })();
          """), encoding="utf-8")
          PY

      - name: Self-Test (manifest & files)
        run: |
          python3 - <<'PY'
          import json,sys,os
          ok=True
          try:
            m=json.load(open("_site/manifest.webmanifest","r"))
            req=["name","short_name","start_url","display","theme_color"]
            miss=[k for k in req if k not in m]
            if miss: print("Manifest: missing",miss); ok=False
            if m.get("display")!="standalone": print("Manifest: display should be 'standalone'"); ok=False
          except Exception as e:
            print("Manifest error:",e); ok=False
          for f in ["_site/index.html","_site/style.css","_site/app.js","_site/sw.js","_site/diag/index.html"]:
            if not os.path.exists(f): print("Missing file:",f); ok=False
          if not ok: sys.exit(1)
          print("Self-Test passed")
          PY

      # ------------------ TESTS E2E (Playwright) ------------------
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright Chromium
        run: |
          npm --version
          npx --yes playwright@1.46.0 install --with-deps chromium

      - name: Run smoke test (headless)
        run: |
          # 1) start a static server on 4173
          python3 -m http.server 4173 --directory _site >/dev/null 2>&1 &
          echo $! > /tmp/srv.pid
          sleep 1

          # 2) write test script
          cat > /tmp/smoke.mjs <<'JS'
          import { chromium } from 'playwright';
          const URL = 'http://localhost:4173/';

          const errors = [];
          const logs = [];
          let ok = true;

          function line(s){ return s.replace(/\n/g,' ').slice(0,500); }

          const browser = await chromium.launch();
          const page = await browser.newPage();

          page.on('console', msg => {
            const entry = `[${msg.type()}] ${line(msg.text())}`;
            logs.push(entry);
            if (msg.type() === 'error') errors.push(entry);
          });
          page.on('pageerror', err => {
            const entry = `[pageerror] ${line(err.message||String(err))}`;
            errors.push(entry); logs.push(entry);
          });
          page.on('requestfailed', req => {
            const entry = `[requestfailed] ${req.url()} ${req.failure()?.errorText||''}`;
            errors.push(entry); logs.push(entry);
          });

          await page.goto(URL, { waitUntil: 'load', timeout: 30000 });

          // Wait UI anchors
          await page.waitForSelector('#view', { timeout: 10000 });
          await page.waitForSelector('#money', { timeout: 10000 });

          // Give the draw loop a few frames
          await page.waitForTimeout(1200);

          // Check canvas actually drew pixels (app.js sets window.__frameSample)
          const frameSample = await page.evaluate(() => window.__frameSample || 0);
          if (!frameSample) {
            errors.push('[assert] Canvas did not draw (alpha=0 at probe)');
          }

          // Switch tab to ensure no JS crash
          await page.getByRole('button', { name: 'Flotte' }).click().catch(()=>{});
          await page.getByRole('button', { name: 'Contrats' }).click().catch(()=>{});
          await page.getByRole('button', { name: '√âconomie' }).click().catch(()=>{});

          // Assert no console errors
          if (errors.length) ok = false;

          // Write logs
          const fs = await import('fs');
          fs.writeFileSync('playwright.log', logs.join('\n') + '\n', 'utf8');

          await browser.close();

          if (!ok) {
            console.error('SMOKE TEST FAILED\n' + errors.join('\n'));
            process.exit(1);
          } else {
            console.log('SMOKE TEST PASSED');
          }
          JS

          # 3) run test
          node /tmp/smoke.mjs || (echo "Playwright failed"; kill $(cat /tmp/srv.pid) 2>/dev/null; exit 1)

          # 4) stop server
          kill $(cat /tmp/srv.pid) 2>/dev/null || true

      - name: Upload logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tktycoon-logs
          path: |
            playwright.log

      - name: Summarize test result
        if: always()
        run: |
          STATUS="${{ job.status }}"
          {
            echo "## üîé Smoke Test (Playwright): ${STATUS}"
            if [ -f playwright.log ]; then
              echo ""
              echo "### Console excerpt"
              echo ""
              tail -n 50 playwright.log | sed 's/^/    /'
            fi
          } >> "$GITHUB_STEP_SUMMARY"

      # ------------------ PACKAGE FOR PAGES ------------------
      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    steps:
      - name: Show site URL + diag link
        run: |
          OWNER="${GITHUB_REPOSITORY%/*}"
          REPO="${GITHUB_REPOSITORY#*/}"
          URL="https://${OWNER}.github.io/${REPO}/"
          {
            echo "## ‚úÖ Your game is live"
            echo ""
            echo "**URL**: ${URL}"
            echo ""
            echo "Diagnostics: ${URL}diag/"
            echo ""
            echo "_iPhone_: ouvrez l‚ÄôURL dans **Safari** ‚Üí **Partager** ‚Üí **Sur l‚Äô√©cran d‚Äôaccueil**."
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4
