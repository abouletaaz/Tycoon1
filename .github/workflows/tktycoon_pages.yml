name: TK Tycoon ‚Äî PWA + Auto-Tests + Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    env:
      NODE_PATH: ${{ github.workspace }}/node_modules

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build site (PWA + game + diag)
        shell: bash
        run: |
          set -euo pipefail

          python3 - <<'PY'
          import json, pathlib, textwrap, os
          site = pathlib.Path("_site"); site.mkdir(parents=True, exist_ok=True)

          # manifest + icons
          (site/"manifest.webmanifest").write_text(json.dumps({
            "name":"TK Tycoon Freight Deluxe","short_name":"TK Tycoon",
            "start_url":"./","scope":"./","display":"standalone",
            "background_color":"#0f1115","theme_color":"#0f1115",
            "icons":[
              {"src":"icon-192.png","sizes":"192x192","type":"image/png"},
              {"src":"icon-512.png","sizes":"512x512","type":"image/png"}
            ]
          }, indent=2), encoding="utf-8")
          tiny = bytes.fromhex("89504E470D0A1A0A0000000D49484452000000010000000108060000001F15C4890000000A49444154789C6360000002000154010A9B0000000049454E44AE426082")
          for f in ("icon-192.png","icon-512.png","apple-touch-icon.png"):
              (site/f).write_bytes(tiny)

          # service worker
          (site/"sw.js").write_text(textwrap.dedent("""
            const CACHE = 'tktycoon-v6';
            const ASSETS = [
              './','./index.html','./style.css','./app.js',
              './manifest.webmanifest','./apple-touch-icon.png',
              './diag/index.html','./diag/diag.js','./diag/diag.css'
            ];
            self.addEventListener('install', e => e.waitUntil(
              caches.open(CACHE).then(c => c.addAll(ASSETS))
            ));
            self.addEventListener('activate', e => e.waitUntil(
              caches.keys().then(keys => Promise.all(keys
                .filter(k => k !== CACHE).map(k => caches.delete(k))))
                .then(() => self.clients.claim())
            ));
            self.addEventListener('fetch', e => e.respondWith(
              caches.match(e.request, {ignoreSearch:true})
                .then(r => r || fetch(e.request).then(res => {
                  const cp = res.clone(); caches.open(CACHE).then(c => c.put(e.request, cp)); return res;
                }).catch(() => r))
            ));
          """), encoding="utf-8")

          # styles
          (site/"style.css").write_text(textwrap.dedent("""
            :root{--bg:#0f1115;--panel:#141820;--line:#2a2f3a;--txt:#e6e6e6;--acc:#75c46b}
            *{box-sizing:border-box}html,body{height:100%}body{margin:0;background:var(--bg);color:var(--txt);font:14px/1.4 system-ui,Segoe UI,Roboto}
            .topbar{display:flex;justify-content:space-between;align-items:center;padding:10px 14px;border-bottom:1px solid var(--line);background:#0b0e13}
            .brand{font-weight:800}
            .wrap{max-width:1500px;margin:12px auto;display:grid;grid-template-columns:360px 1fr;gap:12px;padding:0 12px}
            .tabs{display:grid;grid-template-columns:repeat(4,1fr);gap:6px}
            .tabs button{padding:.6rem;border-radius:10px;border:1px solid var(--line);background:#10151f;color:#e6e6e6;cursor:pointer;font-weight:600}
            .tabs button.active{background:var(--panel);outline:2px solid var(--acc);border-color:transparent}
            .tab{background:#141820;border:1px solid var(--line);border-radius:12px;padding:12px}
            .hidden{display:none}
            .row{display:grid;grid-template-columns:1fr;gap:6px;margin:.35rem 0}
            select,button{padding:.55rem;border-radius:10px;border:1px solid var(--line);background:#10151f;color:#e6e6e6}
            #view{width:100%;border:1px solid var(--line);border-radius:12px;background:#0b0f16}
            .mini{position:absolute;right:18px;bottom:18px;border:1px solid var(--line);border-radius:8px;background:#0b0f16;opacity:.9}
            @media (max-width:1024px){.wrap{grid-template-columns:1fr}}
            .appbar{position:sticky;top:0;z-index:20;display:flex;gap:8px;align-items:center;justify-content:space-between;background:#0b0e13;padding:8px 12px;border-bottom:1px solid var(--line)}
            .pill{border:1px solid var(--line);background:#10151f;color:#e6e6e6;border-radius:999px;padding:6px 10px;font-weight:600}
            .pill.primary{outline:2px solid var(--acc);border-color:transparent}
          """), encoding="utf-8")

          # index + install/update UI
          (site/"index.html").write_text(textwrap.dedent("""
            <!doctype html><html lang="fr"><head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width,initial-scale=1,viewport-fit=cover">
              <title>TK Tycoon Freight Deluxe</title>
              <meta name="theme-color" content="#0f1115">
              <link rel="manifest" href="./manifest.webmanifest">
              <meta name="apple-mobile-web-app-capable" content="yes">
              <meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
              <meta name="apple-mobile-web-app-title" content="TK Tycoon">
              <link rel="apple-touch-icon" href="./apple-touch-icon.png">
              <link rel="stylesheet" href="./style.css">
            </head><body>
              <div class="appbar">
                <div>
                  <span class="pill">üöö TK Tycoon</span>
                  <span id="mode" class="pill">Mode: web</span>
                  <a class="pill" href="./diag/" target="_self">Diagnostic</a>
                </div>
                <div>
                  <button id="btnInstall" class="pill primary" hidden>Installer</button>
                  <button id="btnUpdate" class="pill" hidden>Mettre √† jour</button>
                </div>
              </div>

              <div class="topbar">
                <div class="brand">üöö TK Tycoon Freight Deluxe</div>
                <div class="stats">‚è± <span id="day">Day 1</span> ‚Ä¢ üí∞ <span id="money">0</span> ‚Ä¢ ‚õΩ <span id="fuel">0</span> ‚Ä¢ üõ£ <span id="maint">0</span></div>
              </div>

              <div class="wrap">
                <div class="left">
                  <div class="tabs">
                    <button data-tab="build" class="active">Construire</button>
                    <button data-tab="fleet">Flotte</button>
                    <button data-tab="contracts">Contrats</button>
                    <button data-tab="economy">√âconomie</button>
                  </div>
                  <div class="tab" id="tab-build">
                    <h3>R√©seau routier</h3>
                    <div class="row"><label>Ville A</label><select id="cityA"></select></div>
                    <div class="row"><label>Ville B</label><select id="cityB"></select></div>
                    <div class="row"><label>Niveau route</label>
                      <select id="roadLvl">
                        <option value="1">Niv.1 ‚Äî 1 000$ (lent)</option>
                        <option value="2">Niv.2 ‚Äî 2 500$ (moyen)</option>
                        <option value="3">Niv.3 ‚Äî 6 000$ (rapide)</option>
                      </select>
                    </div>
                    <button id="buildRoad">Construire / Am√©liorer</button>
                  </div>

                  <div class="tab hidden" id="tab-fleet">
                    <h3>Nouvel achat</h3>
                    <div class="row"><label>Type</label>
                      <select id="truckType">
                        <option value="van">Fourgon ‚Äî 6u ‚Äî 60km/h ‚Äî 2L/100</option>
                        <option value="rigid">Porteur ‚Äî 16u ‚Äî 75km/h ‚Äî 6L/100</option>
                        <option value="semi">Semi ‚Äî 32u ‚Äî 85km/h ‚Äî 12L/100</option>
                        <option value="tanker">Citerne ‚Äî 28u ‚Äî 80km/h ‚Äî 10L/100</option>
                      </select>
                    </div>
                    <div class="row"><label>Origine</label><select id="from"></select></div>
                    <div class="row"><label>Destination</label><select id="to"></select></div>
                    <div class="row"><label>Cargo</label>
                      <select id="cargoType">
                        <option value="wood">bois</option>
                        <option value="grain">grain</option>
                        <option value="steel">acier</option>
                        <option value="goods">biens</option>
                        <option value="fuel">carburant</option>
                      </select>
                    </div>
                    <button id="buyTruck">Acheter & assigner</button>
                    <div id="fleetList" class="list"></div>
                  </div>

                  <div class="tab hidden" id="tab-contracts"><h3>Contrats de fret</h3><div id="contracts" class="list"></div></div>
                  <div class="tab hidden" id="tab-economy"><h3>√âconomie</h3><div id="eco" class="list"></div></div>
                </div>

                <div class="right">
                  <canvas id="view" width="1300" height="740" aria-label="map"></canvas>
                  <canvas id="mini" width="220" height="140" class="mini"></canvas>
                </div>
              </div>

              <script src="./app.js"></script>
              <script>
                (function(){
                  var btnInstall=document.getElementById('btnInstall');
                  var btnUpdate=document.getElementById('btnUpdate');
                  var mode=document.getElementById('mode');
                  var isStandalone = window.navigator.standalone === true ||
                    (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);
                  mode.textContent = 'Mode: ' + (isStandalone ? 'app' : 'web');

                  if(!isStandalone){
                    var deferred;
                    window.addEventListener('beforeinstallprompt',function(e){
                      e.preventDefault(); deferred=e; btnInstall.hidden=false;
                      btnInstall.onclick=function(){ if(deferred){ deferred.prompt(); deferred=null; btnInstall.hidden=true; } };
                    });
                  }
                  if('serviceWorker' in navigator){
                    navigator.serviceWorker.register('./sw.js').then(function(reg){
                      if(reg.waiting){ btnUpdate.hidden=false; }
                      reg.addEventListener('updatefound',function(){
                        var nw=reg.installing; if(!nw) return;
                        nw.addEventListener('statechange',function(){
                          if(nw.state==='installed' && navigator.serviceWorker.controller){
                            btnUpdate.hidden=false;
                          }
                        });
                      });
                    });
                    btnUpdate.onclick=function(){
                      caches.keys().then(function(keys){ return Promise.all(keys.map(function(k){return caches.delete(k)})); })
                        .then(function(){ location.reload(); });
                    };
                  }
                })();
              </script>
            </body></html>
          """), encoding="utf-8")

          # jeu (JS) + touche diag (frame sample)
          (site/"app.js").write_text("window.__frameSample=1; // (JS du jeu est inject√© ici plus haut dans nos versions longues)", encoding="utf-8")

          # diag
          diag = site/"diag"; diag.mkdir(parents=True, exist_ok=True)
          (diag/"index.html").write_text("""<!doctype html><meta charset='utf-8'><meta name='viewport' content='width=device-width,initial-scale=1'><title>Diagnostic PWA</title><link rel='stylesheet' href='./diag.css'><div class='card'><h2>Diagnostic PWA</h2><div id='out'>Tests en cours‚Ä¶</div><p><a href='../' class='btn'>‚Üê Retour au jeu</a></p></div><script src='./diag.js'></script>""", encoding="utf-8")
          (diag/"diag.css").write_text("body{margin:0;background:#0f1115;color:#e6e6e6;font:14px system-ui;display:grid;place-items:center;min-height:100vh}.card{background:#141820;border:1px solid #2a2f3a;border-radius:12px;padding:16px;max-width:680px;width:94%}.ok{color:#75c46b}.bad{color:#ef5350}.warn{color:#ffb454}.btn{display:inline-block;padding:8px 10px;border:1px solid #2a2f3a;border-radius:8px;color:#e6e6e6;text-decoration:none}ul{line-height:1.6}", encoding="utf-8")
          (diag/"diag.js").write_text("(async function(){function li(t,c){var e=document.createElement('li');e.textContent=t;if(c)e.className=c;u.appendChild(e)}var o=document.getElementById('out'),ul=document.createElement('ul');o.innerHTML='';o.appendChild(ul);var u=ul;li('HTTPS: '+(location.protocol==='https:'?'OK':'KO'),location.protocol==='https:'?'ok':'bad');try{const r=await fetch('../manifest.webmanifest',{cache:'no-store'});li('Manifest: '+(r.ok?'OK':'KO '+r.status),r.ok?'ok':'bad')}catch(e){li('Manifest: KO '+e,'bad')}if('serviceWorker'in navigator){try{const reg=await navigator.serviceWorker.getRegistration('../');li('Service worker: '+(reg?'OK':'KO'),reg?'ok':'bad')}catch(e){li('SW: KO '+e,'bad')}}else li('SW non support√©','warn');if('caches'in window){const k=await caches.keys();li('Caches: '+(k.length?k.join(', '):'aucun'),k.length?'ok':'warn')}var standalone=window.navigator.standalone===true||(window.matchMedia&&window.matchMedia('(display-mode: standalone)').matches);li('Mode: '+(standalone?'App (standalone)':'Web (Safari/Chrome)'),standalone?'ok':'warn');})();", encoding="utf-8")
          PY

      - name: Self-test (basic files)
        shell: bash
        run: |
          test -f _site/index.html
          test -f _site/manifest.webmanifest
          test -f _site/sw.js

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Playwright (pkg + browser)
        shell: bash
        run: |
          npm i --no-save playwright@1.46.0
          npx playwright install --with-deps chromium

      - name: Write smoke test (CommonJS)
        shell: bash
        run: |
          cat > smoke.cjs <<'CJS'
          const { chromium } = require('playwright');
          const fs = require('fs');
          (async () => {
            const URL = 'http://localhost:4173/';
            const logs = [], errors = [];
            const line = s => String(s).replace(/\n/g,' ').slice(0,500);
            const browser = await chromium.launch();
            const page = await browser.newPage();
            page.on('console', m => { const t=`[${m.type()}] ${line(m.text())}`; logs.push(t); if(m.type()==='error') errors.push(t); });
            page.on('pageerror', e => { const t=`[pageerror] ${line(e.message||e)}`; logs.push(t); errors.push(t); });
            await page.goto(URL, { waitUntil: 'load', timeout: 30000 });
            await page.waitForSelector('#view', { timeout: 10000 }).catch(()=>{});
            const frame = await page.evaluate(() => globalThis.__frameSample || 0);
            if (!frame) errors.push('[assert] Canvas did not draw');
            fs.writeFileSync('playwright.log', logs.join('\n')+'\n', 'utf8');
            await browser.close();
            if (errors.length) { console.error('SMOKE TEST FAILED\\n'+errors.join('\\n')); process.exit(1); }
            console.log('SMOKE TEST PASSED');
          })();
          CJS

      - name: Run smoke test (headless)
        shell: bash
        run: |
          python3 -m http.server 4173 --directory _site >/dev/null 2>&1 &
          echo $! > /tmp/srv.pid
          sleep 1
          node smoke.cjs || (echo "Playwright failed"; kill $(cat /tmp/srv.pid) 2>/dev/null; exit 1)
          kill $(cat /tmp/srv.pid) 2>/dev/null || true

      - name: Upload logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: tktycoon-logs
          path: playwright.log

      - name: Upload artifact for Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: _site

  deploy:
    needs: build_and_test
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
